
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay	   on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    # enable gzip compressed
    gzip  on;
    # enable gzip both for HTTP/1.0 and HTTP/1.1
    gzip_http_version 1.1;
    # compression level (1-9)
    gzip_comp_level 5;
    # minimum compress length
    gzip_min_length 256;
    # enable compression on proxy
    gzip_proxied any;
    gzip_vary on;

    # compress MIME-types.
    gzip_types
	application/javascript
	application/json
	application/xml
	application/opentype
	application/x-m4a
	application/jpeg
	application/png
	application/css
	application/plain;
	# text/html is always compressed by default
    
    upstream frontends {
	server 127.0.0.1:5001;
    }

    server {
        listen       80;
        # server_name  localhost;
	client_max_body_size 50M;	
	upload_buffer_size 16M;

        #charset koi8-r;
	
	# Upload form should be submitted to this location
	location /upload {
		# Pass altered request body to this location
		upload_pass @after_upload;

		# Store files to this directory
		upload_store /tmp/upload/;

		# Upload speed, 0: no limit
		upload_limit_rate 0;

		# Allow uploaded files to be read only by user
		upload_store_access user:rw group:rw all:r;

		# Set specified fields in request body
		upload_set_form_field $upload_field_name.name "$upload_file_name";
		upload_set_form_field $upload_field_name.content_type "$upload_content_type";
		upload_set_form_field $upload_field_name.path "$upload_tmp_path";

		# Inform backend about hash and size of a file
		upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
		upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

		# Pass all form field to backend
		upload_pass_form_field "^.*$";

		upload_cleanup 200-599;
	}

	# Pass altered request body to a backend
	location @after_upload {
		proxy_pass http://frontends;
	}
	
	# static files
	location /static {
		root /var/www/solar/application/;
		add_header X-Served-By-NGINX true always;
	}

        #access_log  logs/host.access.log  main;

        location / {
	    proxy_pass_header Server;
	    proxy_set_header Host $http_host;
	    proxy_redirect off;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Scheme $scheme;
	    proxy_pass http://frontends;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
